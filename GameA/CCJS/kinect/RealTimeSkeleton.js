define(function(q,g){function l(a){m=0;for(var b=1,e=d.length;b<e;b+=4)tempPoint[a][m].setValue(d[b]/1E3,d[b+1]/1E3,-d[b+2]/1E3),m++;c.children[a].choice[0].point=tempPoint[a];-1===c.children[a].whichChoice&&(c.children[a].whichChoice=-3)}var h=!1,p=q("core/Logger").getLog(),c,e,n,b={"0":"",1:"",2:"",3:"",4:"",5:"",num:0},j=[!1,!1],m=0,f,d,k;new SFVec2f(0,0);tempPoint=[new MFVec3f(new SFVec3f(0,0,0),new SFVec3f(0,0,0),new SFVec3f(0,0,0),new SFVec3f(0,0,0),new SFVec3f(0,0,0),new SFVec3f(0,0,0),new SFVec3f(0,
0,0),new SFVec3f(0,0,0),new SFVec3f(0,0,0),new SFVec3f(0,0,0),new SFVec3f(0,0,0),new SFVec3f(0,0,0),new SFVec3f(0,0,0),new SFVec3f(0,0,0),new SFVec3f(0,0,0),new SFVec3f(0,0,0),new SFVec3f(0,0,0),new SFVec3f(0,0,0),new SFVec3f(0,0,0),new SFVec3f(0,0,0)),new MFVec3f(new SFVec3f(0,0,0),new SFVec3f(0,0,0),new SFVec3f(0,0,0),new SFVec3f(0,0,0),new SFVec3f(0,0,0),new SFVec3f(0,0,0),new SFVec3f(0,0,0),new SFVec3f(0,0,0),new SFVec3f(0,0,0),new SFVec3f(0,0,0),new SFVec3f(0,0,0),new SFVec3f(0,0,0),new SFVec3f(0,
0,0),new SFVec3f(0,0,0),new SFVec3f(0,0,0),new SFVec3f(0,0,0),new SFVec3f(0,0,0),new SFVec3f(0,0,0),new SFVec3f(0,0,0),new SFVec3f(0,0,0))];g.frameChange=function(a){d=a;h&&c&&(f=d[0],-1==f?(k=d[1],""!==b[k]&&(a=b[k],-3===c.children[a].whichChoice&&(c.children[a].whichChoice=-1),j[b[k]]=!1,b[k]="",b.num--)):""===b[f]?0===b.num?(b[f]=0,l(0),j[0]=!0,b.num=1):1===b.num&&(j[0]?(b[f]=1,l(1),j[1]=!0):(b[f]=0,l(0),j[0]=!0),b.num=2):l(b[f]))};g.init=function(){if(!h){var a="",a="Group { \nchildren [ \nTransform {translation 0 0 -1} \n",
a=a+"]} \n";if(e=new SFNode(a))if(a="Group{ \n",a+="children[ \n",a+="SceneTexture { \n",a+="scene Group\t{ \n",a+="children [ \n",a+="PerspectiveCamera { \n",a+="position 0 0 1 \n",a+="}]}} \n",a+="Material{emissiveColor 1 1 1} \n",a+="IndexedFaceSet{ \n",a+="coord Coordinate {point [-1 1 0 1 1 0 1 -1 0 -1 -1 0]} \n",a+="coordIndex [0 3 2 1] \n",a+="texCoord TextureCoordinate {point [ 0 1 1 1 1 0 0 0 ]} \n",a+="} \n",a+=" ]}\n",n=new SFNode(a))if(a="Group { \n",a+="children [ \n",a+="Switch\t{ \n",
a+="choice [ \n",a+="DEF point Coordinate {point [0,1,-1,1,2,-1,2,3,-1,2,4,-1,4,5,-1,5,6,-1,6,7,-1,2,8,-1,8,9,-1,9,10,-1,10,11,-1,0,12,-1,12,13,-1,13,14,-1,14,15,-1,0,16,-1,16,17,-1,17,18,-1,18,19,-1]} \n",a+="DEF drawStyle DrawStyle { \n",a+="lineWidth 6 \n",a+="pointSize 6 \n",a+="} \n",a+="BaseColor {rgb 0.8 0.8 0.2} \n",a+="IndexedLineSet{ \n",a+="coord USE point \n",a+="coordIndex [0 1 -1 1 2 -1 2 3 -1 2 4 -1 4 5 -1 5 6 -1 6 7 -1 2 8 -1 8 9 -1 9 10 -1 10 11 -1 0 12 -1 12 13 -1 13 14 -1 14 15 -1 0 16 -1 16 17 -1 17 18 -1 18 19 -1] \n",
a+="} \n",a+="PointSet{ \n",a+="coord USE point \n",a+="color DEF colorWhite Color{color [1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ]} \n",a+="}]} \n",a+="Switch\t{ \n",a+="choice [ \n",a+="DEF point1 Coordinate {point [0,1,-1,1,2,-1,2,3,-1,2,4,-1,4,5,-1,5,6,-1,6,7,-1,2,8,-1,8,9,-1,9,10,-1,10,11,-1,0,12,-1,12,13,-1,13,14,-1,14,15,-1,0,16,-1,16,17,-1,17,18,-1,18,19,-1]} \n",a+="USE\tdrawStyle \n",a+="BaseColor {rgb 0.2 1 0.2} \n",
a+="IndexedLineSet{ \n",a+="coord USE point1 \n",a+="coordIndex [0 1 -1 1 2 -1 2 3 -1 2 4 -1 4 5 -1 5 6 -1 6 7 -1 2 8 -1 8 9 -1 9 10 -1 10 11 -1 0 12 -1 12 13 -1 13 14 -1 14 15 -1 0 16 -1 16 17 -1 17 18 -1 18 19 -1] \n",a+="} \n",a+="PointSet{ \n",a+="coord USE point1 \n",a+="color USE colorWhite \n",a+="}]}]} \n",c=new SFNode(a))n.children[0].scene.children[1]=c,e.children[0].addChild(n),(a=SFNode.get("__rtSkeGroup"))?a.addChild(e):(p.warn("实时骨骼显示所需要的Group不存在,将直接加入到lyinux->userscenegraphroot"),SFNode.get("lyinux->userscenegraphroot").children[0].addChild(e)),
p.debug("实时骨骼创建成功");h=!0}};g.destory=function(){h&&(h=!1,c.children[0].whichChoice=-1,c.children[1].whichChoice=-1)};g.setTranslation=function(a,b,c){e.children[0].translation.setValue(a,b,c)};g.setRotation=function(a,b,c,d){e.children[0].rotation.setValue(a,b,c,d)};g.setScale=function(a,b,c){e.children[0].scale.setValue(a,b,c)}});
