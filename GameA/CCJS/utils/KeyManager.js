define(function(l){var f=l("core/Logger").getLog(),k=function(a,c,b){this.state=a;this.keyCode=c;this.keyName=b},e,d={},h=[],g=[],j=function(){};k.prototype={valueOf:function(){return""+(this.keyName||this.keyCode)},toString:function(){return this.valueOf()},isPressed:function(){return(e&this.state)===this.state},press:function(){e|=this.state},lift:function(){e&=~this.state}};d.getKeyState=function(){return e};d.valueOf=d.toString=d.toLocaleString=function(){var a=e,c=0,b=[];do 1===(a&1)&&b.push(h[c]),
a>>=1,c++;while(0!==a);return b.join(", ")||"No key is pressed"};d.setKeyState=function(a){"number"!==typeof a?f.debug("Error@KeyManager.setKeyState("+a+") failed: the type of the value must be Number"):e=a;return this};d.setCallBack=function(a){"function"===typeof a?j=a:f.debug('Error@KeyManager.setCallBack(): the value is not a "function"');return this};d.addKey=function(a,c,b){if("number"!==typeof a||0!==a&&0!==a%parseInt(a)||0>a||30<a)return f.debug("Error@KeyManager.addKey("+a+","+c+","+(b?b:
"")+") failed: the 1st variable must be between 1 to 30, and the type must be SFInt32"),this;if(h[a])return f.debug("Error@KeyManager.addKey("+a+","+c+","+(b?b:"")+') failed: the 1st variable KeyID "'+a+'" has been used'),this;if("number"!==typeof c||0!==c%parseInt(c))return f.debug("Error@KeyManager.addKey("+a+","+c+","+(b?b:"")+") failed: the type of the 2nd variable must be SFInt32"),this;this[c]&&f.debug("Warn@KeyManager.addKey("+a+","+c+","+(b?b:"")+'): the KeyCode "'+KeyCode+'" has been used!');
this[c]=new k(1<<a,c,b?b:"");h[a]=this[c];b&&(this[b]&&this[b].constructor!==key?f.debug("Warn@KeyManager.addKey("+a+","+c+","+(b?b:"")+'): the KeyName "'+b+'" is not legal!'):this[b]&&this[b].constructor===key?f.debug("Warn@KeyManager.addKey("+a+","+c+","+(b?b:"")+'): the KeyName "'+b+'" has been used!'):this[b]=this[c]);return this};d.keyDown=function(a){try{if(d[a]){d[a].press();for(var c=!1,b=0,e=g.length;b<e;b++)if(g[b]==a){c=!0;break}c||g.push(a);j()}}catch(h){f.debug("Error@KeyManager.keyDown("+
a+",):"+h)}};d.keyUp=function(a){try{if(d[a]){d[a].lift();for(var c=0,b=g.length;c<b;c++)if(g[c]==a){g.splice(c,1);break}j()}}catch(e){f.debug("Error@KeyManager.keyUp("+a+",):"+e)}};d.isContainedOne=function(){for(var a=0;a<arguments.length;a++)if(d[arguments[a]]&&d[arguments[a]].isPressed())return!0;return!1};d.isContainedAll=function(){for(var a=0;a<arguments.length;a++)if(!d[arguments[a]]||!d[arguments[a]].isPressed())return!1;return!0};d.isContainedWith=function(){for(var a=0,c=0;c<arguments.length;c++)a|=
d[arguments[c]].state;return!(d.isContainedAll.apply(this,arguments)&&a===d.getKeyState())?!1:!0};d.getLastKeyDown=function(){f.debug(g);return g[g.length-1]};d.getKeyCodeList=function(){return g.slice(0)};return d});
